{
  "contractName": "INRCToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AddingOwnAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalanceToRedeem",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidExchangeCurrency",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LowBalanceInContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LowExchangeCurrencyBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RedeemToZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "exchangeCurrencies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "exchangeCurrencyName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "exchangeCurrencyAddress",
          "type": "address"
        }
      ],
      "name": "addExchangeCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "exchangeCurrencyName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "exchangeCurrencyName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddingOwnAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalanceToRedeem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExchangeCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LowBalanceInContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LowExchangeCurrencyBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RedeemToZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"exchangeCurrencyName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"exchangeCurrencyAddress\",\"type\":\"address\"}],\"name\":\"addExchangeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"exchangeCurrencyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"exchangeCurrencies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"exchangeCurrencyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addExchangeCurrency(string,address)\":{\"notice\":\"Adds a new exchange currency(e.g. DUSDC, 0x12D3424BdC7a9FC2f6F9D794810641662967a412)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/INRCToken.sol\":\"INRCToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/INRCToken.sol\":{\"keccak256\":\"0x0ae342162f64a3048d6ac7a6cc45011fb7bcdf876bc56488ca96ca9f836663d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eaac9ec46d22fa0901776a8675c9ea5b91ae8449744b10a61bfe770c4f89006e\",\"dweb:/ipfs/QmXad4YiLRJWCSAicoVa6bTfTQzqEsgPuxSpbyEu8ckAm6\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600981526824a72921aa37b5b2b760b91b602080830191825283518085019094526004845263494e524360e01b9084015281519192916200005f91600391620000f3565b50805162000075906004906020840190620000f3565b505050620000926200008c6200009d60201b60201c565b620000a1565b6001600655620001d6565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b6115ba80620001e66000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a9059cbb11610071578063a9059cbb1461025a578063b1b86b131461026d578063dd62ed3e14610280578063dfabd21214610293578063f2fde38b146102c757600080fd5b806370a08231146101e9578063715018a6146102125780638da5cb5b1461021a57806395d89b411461023f578063a457c2d71461024757600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a157806339509351146101b057806340c10f19146101c35780634a0f5082146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780630ca5c5041461016757806318160ddd1461017c575b600080fd5b61012e6102da565b60405161013b91906110f9565b60405180910390f35b610157610152366004611148565b61036c565b604051901515815260200161013b565b61017a610175366004611215565b610386565b005b6002545b60405190815260200161013b565b61015761019c36600461125a565b610624565b6040516012815260200161013b565b6101576101be366004611148565b610648565b61017a6101d1366004611148565b61066a565b61017a6101e4366004611296565b610680565b6101806101f73660046112e4565b6001600160a01b031660009081526020819052604090205490565b61017a6106f6565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161013b565b61012e61070a565b610157610255366004611148565b610719565b610157610268366004611148565b610799565b61017a61027b366004611215565b6107a7565b61018061028e366004611306565b610b32565b6102276102a1366004611330565b80516020818301810180516008825292820191909301209152546001600160a01b031681565b61017a6102d53660046112e4565b610b5d565b6060600380546102e99061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546103159061136d565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b60003361037a818585610bd6565b60019150505b92915050565b33816103a55760405163b562e8dd60e01b815260040160405180910390fd5b336103c257604051622e076360e81b815260040160405180910390fd5b600082905060006008856040516103d991906113a8565b908152604051908190036020019020546001600160a01b0316905080610412576040516387d265b760e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b038381169182179092556040516370a0823160e01b815291851660048301526000916370a0823190602401602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049391906113c4565b90506000600760009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e91906113dd565b905061051b81600a6114fa565b6105259087611509565b955060006103e8610537886005611509565b6105419190611528565b905061054d818861154a565b96508683101561057057604051638d00d46f60e01b815260040160405180910390fd5b6007546040516323b872dd60e01b81526001600160a01b038881166004830152306024830152604482018a9052909116906323b872dd906064016020604051808303816000875af11580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed9190611562565b5060006105fb866050611509565b61060d90670de0b6b3a7640000611509565b90506106198782610cfa565b505050505050505050565b600033610632858285610dd9565b61063d858585610e53565b506001949350505050565b60003361037a81858561065b8383610b32565b610665919061154a565b610bd6565b610672611021565b61067c8282610cfa565b5050565b610688611021565b6001600160a01b0381163014156106b257604051638739ebeb60e01b815260040160405180910390fd5b806008836040516106c391906113a8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b6106fe611021565b610708600061107b565b565b6060600480546102e99061136d565b600033816107278286610b32565b90508381101561078c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61063d8286868403610bd6565b60003361037a818585610e53565b33816107c65760405163b562e8dd60e01b815260040160405180910390fd5b336107e457604051630d37681b60e41b815260040160405180910390fd5b60006008846040516107f691906113a8565b908152604051908190036020019020546001600160a01b031690508061082f576040516387d265b760e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040516370a0823160e01b8152306004820152600091906370a0823190602401602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae91906113c4565b90506000600760009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092991906113dd565b61093490600a6114fa565b61093e9086611509565b9050818111156109615760405163109ef2f360e21b815260040160405180910390fd5b61096c856050611509565b61097e90670de0b6b3a7640000611509565b945060006103e8610990876005611509565b61099a9190611528565b90506109a6818761154a565b6040516370a0823160e01b81526001600160a01b0387166004820152909650869030906370a0823190602401602060405180830381865afa1580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1391906113c4565b1015610a32576040516360aa395960e01b815260040160405180910390fd5b6040516323b872dd60e01b81526001600160a01b0386166004820152306024820181905260448201889052906323b872dd906064016020604051808303816000875af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa9190611562565b506007546040516323b872dd60e01b81523060048201526001600160a01b03878116602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b289190611562565b5050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b65611021565b6001600160a01b038116610bca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610783565b610bd38161107b565b50565b6001600160a01b038316610c385760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610783565b6001600160a01b038216610c995760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610783565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610d505760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610783565b8060026000828254610d62919061154a565b90915550506001600160a01b03821660009081526020819052604081208054839290610d8f90849061154a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610de58484610b32565b90506000198114610e4d5781811015610e405760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610783565b610e4d8484848403610bd6565b50505050565b6001600160a01b038316610eb75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610783565b6001600160a01b038216610f195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610783565b6001600160a01b03831660009081526020819052604090205481811015610f915760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610783565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610fc890849061154a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101491815260200190565b60405180910390a3610e4d565b6005546001600160a01b031633146107085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610783565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b838110156110e85781810151838201526020016110d0565b83811115610e4d5750506000910152565b60208152600082518060208401526111188160408501602087016110cd565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461114357600080fd5b919050565b6000806040838503121561115b57600080fd5b6111648361112c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261119957600080fd5b813567ffffffffffffffff808211156111b4576111b4611172565b604051601f8301601f19908116603f011681019082821181831017156111dc576111dc611172565b816040528381528660208588010111156111f557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561122857600080fd5b823567ffffffffffffffff81111561123f57600080fd5b61124b85828601611188565b95602094909401359450505050565b60008060006060848603121561126f57600080fd5b6112788461112c565b92506112866020850161112c565b9150604084013590509250925092565b600080604083850312156112a957600080fd5b823567ffffffffffffffff8111156112c057600080fd5b6112cc85828601611188565b9250506112db6020840161112c565b90509250929050565b6000602082840312156112f657600080fd5b6112ff8261112c565b9392505050565b6000806040838503121561131957600080fd5b6113228361112c565b91506112db6020840161112c565b60006020828403121561134257600080fd5b813567ffffffffffffffff81111561135957600080fd5b61136584828501611188565b949350505050565b600181811c9082168061138157607f821691505b602082108114156113a257634e487b7160e01b600052602260045260246000fd5b50919050565b600082516113ba8184602087016110cd565b9190910192915050565b6000602082840312156113d657600080fd5b5051919050565b6000602082840312156113ef57600080fd5b815160ff811681146112ff57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561145157816000190482111561143757611437611400565b8085161561144457918102915b93841c939080029061141b565b509250929050565b60008261146857506001610380565b8161147557506000610380565b816001811461148b5760028114611495576114b1565b6001915050610380565b60ff8411156114a6576114a6611400565b50506001821b610380565b5060208310610133831016604e8410600b84101617156114d4575081810a610380565b6114de8383611416565b80600019048211156114f2576114f2611400565b029392505050565b60006112ff60ff841683611459565b600081600019048311821515161561152357611523611400565b500290565b60008261154557634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561155d5761155d611400565b500190565b60006020828403121561157457600080fd5b815180151581146112ff57600080fdfea26469706673582212209ec5f104f0d8420843409917efe5120f417315cb2c2e38e7dd680c19e79a871064736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a9059cbb11610071578063a9059cbb1461025a578063b1b86b131461026d578063dd62ed3e14610280578063dfabd21214610293578063f2fde38b146102c757600080fd5b806370a08231146101e9578063715018a6146102125780638da5cb5b1461021a57806395d89b411461023f578063a457c2d71461024757600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a157806339509351146101b057806340c10f19146101c35780634a0f5082146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780630ca5c5041461016757806318160ddd1461017c575b600080fd5b61012e6102da565b60405161013b91906110f9565b60405180910390f35b610157610152366004611148565b61036c565b604051901515815260200161013b565b61017a610175366004611215565b610386565b005b6002545b60405190815260200161013b565b61015761019c36600461125a565b610624565b6040516012815260200161013b565b6101576101be366004611148565b610648565b61017a6101d1366004611148565b61066a565b61017a6101e4366004611296565b610680565b6101806101f73660046112e4565b6001600160a01b031660009081526020819052604090205490565b61017a6106f6565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161013b565b61012e61070a565b610157610255366004611148565b610719565b610157610268366004611148565b610799565b61017a61027b366004611215565b6107a7565b61018061028e366004611306565b610b32565b6102276102a1366004611330565b80516020818301810180516008825292820191909301209152546001600160a01b031681565b61017a6102d53660046112e4565b610b5d565b6060600380546102e99061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546103159061136d565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b60003361037a818585610bd6565b60019150505b92915050565b33816103a55760405163b562e8dd60e01b815260040160405180910390fd5b336103c257604051622e076360e81b815260040160405180910390fd5b600082905060006008856040516103d991906113a8565b908152604051908190036020019020546001600160a01b0316905080610412576040516387d265b760e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b038381169182179092556040516370a0823160e01b815291851660048301526000916370a0823190602401602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049391906113c4565b90506000600760009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e91906113dd565b905061051b81600a6114fa565b6105259087611509565b955060006103e8610537886005611509565b6105419190611528565b905061054d818861154a565b96508683101561057057604051638d00d46f60e01b815260040160405180910390fd5b6007546040516323b872dd60e01b81526001600160a01b038881166004830152306024830152604482018a9052909116906323b872dd906064016020604051808303816000875af11580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed9190611562565b5060006105fb866050611509565b61060d90670de0b6b3a7640000611509565b90506106198782610cfa565b505050505050505050565b600033610632858285610dd9565b61063d858585610e53565b506001949350505050565b60003361037a81858561065b8383610b32565b610665919061154a565b610bd6565b610672611021565b61067c8282610cfa565b5050565b610688611021565b6001600160a01b0381163014156106b257604051638739ebeb60e01b815260040160405180910390fd5b806008836040516106c391906113a8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b6106fe611021565b610708600061107b565b565b6060600480546102e99061136d565b600033816107278286610b32565b90508381101561078c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61063d8286868403610bd6565b60003361037a818585610e53565b33816107c65760405163b562e8dd60e01b815260040160405180910390fd5b336107e457604051630d37681b60e41b815260040160405180910390fd5b60006008846040516107f691906113a8565b908152604051908190036020019020546001600160a01b031690508061082f576040516387d265b760e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040516370a0823160e01b8152306004820152600091906370a0823190602401602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae91906113c4565b90506000600760009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092991906113dd565b61093490600a6114fa565b61093e9086611509565b9050818111156109615760405163109ef2f360e21b815260040160405180910390fd5b61096c856050611509565b61097e90670de0b6b3a7640000611509565b945060006103e8610990876005611509565b61099a9190611528565b90506109a6818761154a565b6040516370a0823160e01b81526001600160a01b0387166004820152909650869030906370a0823190602401602060405180830381865afa1580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1391906113c4565b1015610a32576040516360aa395960e01b815260040160405180910390fd5b6040516323b872dd60e01b81526001600160a01b0386166004820152306024820181905260448201889052906323b872dd906064016020604051808303816000875af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa9190611562565b506007546040516323b872dd60e01b81523060048201526001600160a01b03878116602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b289190611562565b5050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b65611021565b6001600160a01b038116610bca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610783565b610bd38161107b565b50565b6001600160a01b038316610c385760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610783565b6001600160a01b038216610c995760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610783565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610d505760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610783565b8060026000828254610d62919061154a565b90915550506001600160a01b03821660009081526020819052604081208054839290610d8f90849061154a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610de58484610b32565b90506000198114610e4d5781811015610e405760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610783565b610e4d8484848403610bd6565b50505050565b6001600160a01b038316610eb75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610783565b6001600160a01b038216610f195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610783565b6001600160a01b03831660009081526020819052604090205481811015610f915760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610783565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610fc890849061154a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101491815260200190565b60405180910390a3610e4d565b6005546001600160a01b031633146107085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610783565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b838110156110e85781810151838201526020016110d0565b83811115610e4d5750506000910152565b60208152600082518060208401526111188160408501602087016110cd565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461114357600080fd5b919050565b6000806040838503121561115b57600080fd5b6111648361112c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261119957600080fd5b813567ffffffffffffffff808211156111b4576111b4611172565b604051601f8301601f19908116603f011681019082821181831017156111dc576111dc611172565b816040528381528660208588010111156111f557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561122857600080fd5b823567ffffffffffffffff81111561123f57600080fd5b61124b85828601611188565b95602094909401359450505050565b60008060006060848603121561126f57600080fd5b6112788461112c565b92506112866020850161112c565b9150604084013590509250925092565b600080604083850312156112a957600080fd5b823567ffffffffffffffff8111156112c057600080fd5b6112cc85828601611188565b9250506112db6020840161112c565b90509250929050565b6000602082840312156112f657600080fd5b6112ff8261112c565b9392505050565b6000806040838503121561131957600080fd5b6113228361112c565b91506112db6020840161112c565b60006020828403121561134257600080fd5b813567ffffffffffffffff81111561135957600080fd5b61136584828501611188565b949350505050565b600181811c9082168061138157607f821691505b602082108114156113a257634e487b7160e01b600052602260045260246000fd5b50919050565b600082516113ba8184602087016110cd565b9190910192915050565b6000602082840312156113d657600080fd5b5051919050565b6000602082840312156113ef57600080fd5b815160ff811681146112ff57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561145157816000190482111561143757611437611400565b8085161561144457918102915b93841c939080029061141b565b509250929050565b60008261146857506001610380565b8161147557506000610380565b816001811461148b5760028114611495576114b1565b6001915050610380565b60ff8411156114a6576114a6611400565b50506001821b610380565b5060208310610133831016604e8410600b84101617156114d4575081810a610380565b6114de8383611416565b80600019048211156114f2576114f2611400565b029392505050565b60006112ff60ff841683611459565b600081600019048311821515161561152357611523611400565b500290565b60008261154557634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561155d5761155d611400565b500190565b60006020828403121561157457600080fd5b815180151581146112ff57600080fdfea26469706673582212209ec5f104f0d8420843409917efe5120f417315cb2c2e38e7dd680c19e79a871064736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:396:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:325:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "93:1:11",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "96:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "157:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "305:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "310:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "301:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "301:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "342:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "227:161:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:11",
                "type": ""
              }
            ],
            "src": "14:380:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12393:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:11",
                    "statements": []
                  },
                  "src": "96:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:11",
                "type": ""
              }
            ],
            "src": "14:258:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:11",
                "type": ""
              }
            ],
            "src": "277:383:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "724:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "733:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "825:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "828:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "775:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "786:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "801:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "806:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "797:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "797:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "810:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "793:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "772:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "762:70:11"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "693:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "704:5:11",
                "type": ""
              }
            ],
            "src": "665:173:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "930:167:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "976:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "988:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "978:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "978:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "978:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "951:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "960:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "947:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "943:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "943:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "940:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1030:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1011:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1049:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1059:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "888:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "899:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "911:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "919:6:11",
                "type": ""
              }
            ],
            "src": "843:254:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1197:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1207:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1207:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1249:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1274:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1267:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1267:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1260:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1166:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1177:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1188:4:11",
                "type": ""
              }
            ],
            "src": "1102:187:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1326:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1343:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1350:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1355:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1336:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1336:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1336:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1383:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1386:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1376:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1376:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1407:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1410:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1400:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1400:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1294:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:666:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1528:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1537:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1540:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1530:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1530:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1530:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1507:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1515:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1503:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1503:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1522:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1499:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1499:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1492:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1492:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1489:55:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1553:30:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1576:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1563:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:20:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1557:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1592:28:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1602:18:11",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1596:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1643:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1645:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1645:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1645:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1635:2:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1639:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1632:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1629:36:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1674:17:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1688:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1684:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:7:11"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1678:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1700:23:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1714:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:9:11"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1704:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1732:71:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1754:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1778:2:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1782:4:11",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1774:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1774:13:11"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1789:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1770:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1770:22:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1794:2:11",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1766:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1766:31:11"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1799:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:40:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1750:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:53:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1736:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1862:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1864:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1864:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1864:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1821:10:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1833:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1818:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1841:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1853:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1838:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1838:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1815:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:46:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1812:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1900:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1904:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1893:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1893:22:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1931:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1939:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1924:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:18:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1924:18:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1990:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1999:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2002:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1992:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1992:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1992:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1965:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1973:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1961:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1961:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1978:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1957:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1957:26:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1985:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1954:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1951:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2032:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2040:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2028:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2028:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2051:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2059:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2047:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2047:17:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2066:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2015:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2015:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2093:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2101:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2089:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2089:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2106:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2085:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2085:26:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2078:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2078:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2078:37:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2124:15:11",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2133:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2124:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1453:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1461:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1469:5:11",
                "type": ""
              }
            ],
            "src": "1426:719:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2247:293:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2293:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2302:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2305:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2295:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2295:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2295:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2268:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2277:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2264:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2264:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2260:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2257:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2318:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2345:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2332:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2332:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2322:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2398:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2407:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2410:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2400:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2400:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2400:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2370:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2378:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2367:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2364:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2423:60:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2455:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2466:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2451:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2451:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2475:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2433:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2423:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2492:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2519:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2515:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2515:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2502:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2492:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2205:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2216:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2228:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2236:6:11",
                "type": ""
              }
            ],
            "src": "2150:390:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2646:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2656:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2668:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2679:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2664:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2656:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2698:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2709:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2691:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2691:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2615:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2626:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2637:4:11",
                "type": ""
              }
            ],
            "src": "2545:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2831:224:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2877:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2886:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2889:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2879:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2879:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2879:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2852:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2861:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2848:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2848:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2873:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2844:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2844:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2841:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2902:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2931:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2912:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2902:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2950:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2983:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2994:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2979:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2979:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2960:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2960:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2950:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3007:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3034:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3045:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3030:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3030:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3017:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3017:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3007:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2781:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2792:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2804:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2812:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2820:6:11",
                "type": ""
              }
            ],
            "src": "2727:328:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3157:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3167:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3179:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3190:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3175:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3167:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3209:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3224:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3232:4:11",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3220:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3220:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3202:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3202:36:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3126:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3137:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3148:4:11",
                "type": ""
              }
            ],
            "src": "3060:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3346:299:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3392:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3401:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3404:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3394:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3394:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3394:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3367:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3376:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3363:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3363:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3388:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3359:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3359:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3356:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3417:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3444:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3431:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3421:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3497:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3506:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3509:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3499:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3499:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3499:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3469:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3477:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3466:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3466:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3463:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3522:60:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3554:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3565:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3550:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3550:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3574:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3532:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3522:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3591:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3624:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3635:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3620:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3620:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3601:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3591:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3304:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3315:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3327:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3335:6:11",
                "type": ""
              }
            ],
            "src": "3249:396:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3720:116:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3766:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3775:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3778:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3768:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3768:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3768:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3741:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3750:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3737:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3737:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3762:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3733:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3733:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3730:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3791:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3820:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3801:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3791:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3686:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3697:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3709:6:11",
                "type": ""
              }
            ],
            "src": "3650:186:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3942:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3952:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3964:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3975:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3960:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3960:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3952:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3994:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4009:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4025:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4030:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4021:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4021:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4034:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4017:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4017:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4005:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4005:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3987:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3987:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3987:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3911:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3922:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3933:4:11",
                "type": ""
              }
            ],
            "src": "3841:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4136:173:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4182:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4191:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4194:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4184:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4184:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4184:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4157:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4166:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4153:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4153:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4178:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4149:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4149:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4146:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4207:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4236:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4217:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4217:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4207:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4255:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4288:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4299:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4284:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4284:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4265:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4255:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4094:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4105:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4117:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4125:6:11",
                "type": ""
              }
            ],
            "src": "4049:260:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4394:242:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4440:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4449:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4452:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4442:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4442:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4442:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4415:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4424:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4411:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4411:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4436:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4407:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4407:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4404:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4465:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4492:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4479:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4469:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4545:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4554:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4557:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4547:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4547:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4547:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4517:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4525:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4514:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4511:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4570:60:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4602:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4613:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4598:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4598:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4622:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4580:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4580:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4570:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4360:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4371:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4383:6:11",
                "type": ""
              }
            ],
            "src": "4314:322:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4696:325:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4706:22:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4720:1:11",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4723:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4716:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4716:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4706:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4737:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4767:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4773:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4763:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4763:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4741:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4814:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4816:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4830:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4838:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4826:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4826:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4816:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4794:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4787:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4787:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4784:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4904:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4925:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4932:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4937:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4928:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4928:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4918:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4918:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4918:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4969:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4972:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4962:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4962:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4962:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4997:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5000:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4990:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4990:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4990:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4860:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4883:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4891:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4880:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4880:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4857:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4857:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4854:161:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4676:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4685:6:11",
                "type": ""
              }
            ],
            "src": "4641:380:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5165:137:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5175:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5195:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5189:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5179:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5237:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5245:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5233:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5233:17:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5252:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5257:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5211:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5211:53:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5211:53:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5273:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5284:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5289:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5280:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5280:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5273:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5141:3:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5146:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5157:3:11",
                "type": ""
              }
            ],
            "src": "5026:276:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5388:103:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5434:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5443:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5446:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5436:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5436:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5436:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5409:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5418:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5405:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5405:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5430:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5401:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5401:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5398:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5459:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5475:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5469:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5469:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5459:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5354:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5365:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5377:6:11",
                "type": ""
              }
            ],
            "src": "5307:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5575:194:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5621:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5630:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5633:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5623:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5623:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5623:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5596:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5605:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5592:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5592:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5617:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5588:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5585:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5646:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5665:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5659:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5659:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5650:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5723:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5732:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5735:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5725:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5725:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5725:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5697:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5708:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5715:4:11",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5704:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5704:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5694:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5694:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5687:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5687:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5684:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5748:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5758:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5748:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5541:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5552:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5564:6:11",
                "type": ""
              }
            ],
            "src": "5496:273:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5806:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5823:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5830:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5835:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5826:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5826:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5816:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5816:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5816:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5863:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5866:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5856:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5887:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5890:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5880:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5880:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5880:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5774:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5970:358:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5980:16:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5995:1:11",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "5984:7:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6005:16:11",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "6014:7:11"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6005:5:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6030:13:11",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "6038:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "6030:4:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6094:228:11",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6139:22:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6141:16:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6141:18:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6141:18:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6114:4:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6128:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "6124:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6124:6:11"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "6132:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "6120:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6120:17:11"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "6111:2:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6111:27:11"
                        },
                        "nodeType": "YulIf",
                        "src": "6108:53:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6200:29:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6202:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "6215:5:11"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "6222:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6211:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6211:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "6202:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6181:8:11"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "6191:7:11"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6177:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6177:22:11"
                        },
                        "nodeType": "YulIf",
                        "src": "6174:55:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6242:23:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6254:4:11"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6260:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "6250:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6250:15:11"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "6242:4:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6278:34:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "6294:7:11"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6303:8:11"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "6290:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6290:22:11"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "6278:8:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6063:8:11"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "6073:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6060:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6060:21:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6082:3:11",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6056:3:11",
                    "statements": []
                  },
                  "src": "6052:270:11"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "5934:5:11",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5941:8:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5954:5:11",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5961:4:11",
                "type": ""
              }
            ],
            "src": "5906:422:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6392:747:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6430:52:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6444:10:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6453:1:11",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6444:5:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6467:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6412:8:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6405:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6405:16:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6402:80:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6515:52:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6529:10:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6538:1:11",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6529:5:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6552:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6501:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6494:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6494:12:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6491:76:11"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6603:52:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6617:10:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6626:1:11",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6617:5:11"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6640:5:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6596:59:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6601:1:11",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6671:123:11",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6706:22:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6708:16:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6708:18:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6708:18:11"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6691:8:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6701:3:11",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "6688:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6688:17:11"
                            },
                            "nodeType": "YulIf",
                            "src": "6685:43:11"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6741:25:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6754:8:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6764:1:11",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6750:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6750:16:11"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6741:5:11"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6779:5:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6664:130:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6669:1:11",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "6583:4:11"
                  },
                  "nodeType": "YulSwitch",
                  "src": "6576:218:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6892:70:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6906:28:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6919:4:11"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6925:8:11"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "6915:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6915:19:11"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6906:5:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6947:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6816:4:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6822:2:11",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6813:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6813:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6830:8:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6840:2:11",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6827:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6827:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6809:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6809:35:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6853:4:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6859:3:11",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6850:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6850:13:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6868:8:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6878:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6865:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6865:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6846:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6846:36:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6806:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6806:77:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6803:159:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6971:57:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "7013:4:11"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "7019:8:11"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "6994:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6994:34:11"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "6975:7:11",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "6984:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7073:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7075:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7075:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7075:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "7043:7:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7060:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7056:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7056:6:11"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "7064:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "7052:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7052:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7040:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7037:58:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7104:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "7117:7:11"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "7126:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7113:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7113:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "7104:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "6363:4:11",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "6369:8:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "6382:5:11",
                "type": ""
              }
            ],
            "src": "6333:806:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7212:72:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7222:56:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "7252:4:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "7262:8:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7272:4:11",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7258:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7258:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "7231:20:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7231:47:11"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "7222:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "7183:4:11",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "7189:8:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "7202:5:11",
                "type": ""
              }
            ],
            "src": "7144:140:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7341:116:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7400:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7402:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7402:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7402:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7372:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7365:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7365:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7358:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7358:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7380:1:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7391:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7387:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7387:6:11"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7395:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7383:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7383:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7377:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7377:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7354:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:45:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7351:71:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7431:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7446:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7449:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7442:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7442:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7431:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7320:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7323:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7329:7:11",
                "type": ""
              }
            ],
            "src": "7289:168:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7508:171:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7539:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7560:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7567:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7572:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7563:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7563:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7553:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7553:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7553:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7604:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7607:4:11",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7597:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7597:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7597:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7632:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7635:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7625:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7625:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7625:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7528:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7521:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7521:9:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7518:132:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7659:14:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7668:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7671:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7664:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7664:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7659:1:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7493:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7496:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7502:1:11",
                "type": ""
              }
            ],
            "src": "7462:217:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7732:80:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7759:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7761:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7761:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7761:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7748:1:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7755:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7751:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7751:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7745:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7745:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7742:39:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7790:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7801:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7804:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7797:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7797:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7790:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7715:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7718:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7724:3:11",
                "type": ""
              }
            ],
            "src": "7684:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7974:218:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7984:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7996:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8007:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7992:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7992:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7984:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8019:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8037:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8042:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8033:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8033:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8046:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8029:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8029:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8023:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8064:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8079:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8087:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8075:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8075:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8057:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8057:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8057:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8111:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8122:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8107:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8107:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8131:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8139:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8127:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8127:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8100:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8100:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8100:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8163:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8174:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8159:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8159:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8179:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8152:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8152:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8152:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7927:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7938:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7946:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7954:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7965:4:11",
                "type": ""
              }
            ],
            "src": "7817:375:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8275:199:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8321:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8330:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8333:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8323:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8323:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8323:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8296:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8305:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8292:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8292:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8317:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8288:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8288:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8285:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8346:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8365:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8359:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8359:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8350:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8428:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8437:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8440:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8430:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8430:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8430:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8397:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8418:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8411:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8411:13:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8404:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8404:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8394:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8394:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8387:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8387:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8384:60:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8453:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8463:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8453:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8241:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8252:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8264:6:11",
                "type": ""
              }
            ],
            "src": "8197:277:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8653:227:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8670:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8681:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8663:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8663:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8663:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8704:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8715:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8700:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8700:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8720:2:11",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8693:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8693:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8693:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8743:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8754:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8739:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8739:18:11"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8759:34:11",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8732:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8732:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8732:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8814:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8825:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8810:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8810:18:11"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8830:7:11",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8803:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8803:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8803:35:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8847:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8859:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8870:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8855:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8855:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8847:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8630:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8644:4:11",
                "type": ""
              }
            ],
            "src": "8479:401:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9059:228:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9076:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9087:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9069:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9069:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9069:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9110:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9121:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9106:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9106:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9126:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9099:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9099:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9099:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9149:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9160:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9145:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9145:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9165:34:11",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9138:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9138:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9138:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9220:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9231:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9216:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9216:18:11"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9236:8:11",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9209:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9209:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9209:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9254:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9266:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9277:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9262:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9262:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9254:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9036:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9050:4:11",
                "type": ""
              }
            ],
            "src": "8885:402:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9466:226:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9483:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9494:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9476:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9476:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9476:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9517:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9528:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9513:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9513:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9533:2:11",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9506:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9506:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9506:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9556:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9567:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9552:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9552:18:11"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9572:34:11",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9545:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9545:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9545:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9627:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9638:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9623:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9623:18:11"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9643:6:11",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9616:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9616:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9616:34:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9659:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9671:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9682:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9667:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9667:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9659:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9443:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9457:4:11",
                "type": ""
              }
            ],
            "src": "9292:400:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9871:224:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9888:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9899:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9881:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9881:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9881:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9922:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9933:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9918:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9918:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9938:2:11",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9911:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9911:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9911:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9961:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9972:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9957:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9957:18:11"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9977:34:11",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9950:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9950:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9950:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10032:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10043:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10028:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10028:18:11"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10048:4:11",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10021:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10021:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10021:32:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10062:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10074:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10085:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10070:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10070:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10062:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9848:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9862:4:11",
                "type": ""
              }
            ],
            "src": "9697:398:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10274:181:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10291:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10302:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10284:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10284:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10284:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10325:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10336:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10321:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10321:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10341:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10314:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10314:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10314:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10364:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10375:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10360:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10360:18:11"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10380:33:11",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10353:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10353:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10353:61:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10423:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10435:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10446:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10431:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10431:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10423:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10251:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10265:4:11",
                "type": ""
              }
            ],
            "src": "10100:355:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10634:179:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10651:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10662:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10644:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10644:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10644:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10685:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10696:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10681:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10681:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10701:2:11",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10674:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10674:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10674:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10724:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10735:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10720:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10720:18:11"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10740:31:11",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10713:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10713:59:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10713:59:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10781:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10793:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10804:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10789:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10789:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10781:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10611:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10625:4:11",
                "type": ""
              }
            ],
            "src": "10460:353:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10992:227:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11009:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11020:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11002:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11002:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11002:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11043:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11054:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11039:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11039:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11059:2:11",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11032:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11032:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11032:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11082:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11093:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11078:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11078:18:11"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11098:34:11",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11071:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11071:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11071:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11153:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11164:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11149:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11149:18:11"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11169:7:11",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11142:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11142:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11142:35:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11186:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11198:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11209:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11194:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11194:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11186:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10969:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10983:4:11",
                "type": ""
              }
            ],
            "src": "10818:401:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11398:225:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11415:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11426:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11408:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11408:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11408:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11449:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11460:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11445:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11445:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11465:2:11",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11438:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11438:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11438:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11488:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11499:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11484:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11484:18:11"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11504:34:11",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11477:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11477:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11477:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11559:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11570:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11555:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11555:18:11"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11575:5:11",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11548:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11548:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11548:33:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11590:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11602:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11613:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11598:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11598:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11590:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11375:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11389:4:11",
                "type": ""
              }
            ],
            "src": "11224:399:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11802:228:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11819:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11830:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11812:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11812:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11812:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11853:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11864:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11849:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11849:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11869:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11842:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11842:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11842:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11892:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11903:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11888:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11888:18:11"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11908:34:11",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11881:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11881:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11881:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11963:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11974:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11959:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11959:18:11"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11979:8:11",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11952:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11952:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11952:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11997:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12009:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12020:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12005:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12005:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11997:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11779:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11793:4:11",
                "type": ""
              }
            ],
            "src": "11628:402:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12209:182:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12226:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12237:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12219:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12219:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12219:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12260:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12271:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12256:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12256:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12276:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12249:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12249:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12249:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12299:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12310:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12295:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12295:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12315:34:11",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12288:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12288:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12288:62:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12359:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12371:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12382:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12367:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12367:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12359:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12186:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12200:4:11",
                "type": ""
              }
            ],
            "src": "12035:356:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "780:3772:1:-:0;;;947:43;;;;;;;;;-1:-1:-1;1978:113:5;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:5;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;936:32:3;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1701:1:4;1806:7;:22;780:3772:1;;640:96:9;719:10;;640:96::o;2433:187:3:-;2525:6;;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;780:3772:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;780:3772:1;;;-1:-1:-1;780:3772:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:11;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;780:3772:1;;;;;;",
  "deployedSourceMap": "780:3772:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1267:14:11;;1260:22;1242:41;;1230:2;1215:18;4433:197:5;1102:187:11;1513:1378:1;;;;;;:::i;:::-;;:::i;:::-;;3244:106:5;3331:12;;3244:106;;;2691:25:11;;;2679:2;2664:18;3244:106:5;2545:177:11;5192:286:5;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;3202:36:11;;3190:2;3175:18;3093:91:5;3060:184:11;5873:234:5;;;;;;:::i;:::-;;:::i;996:93:1:-;;;;;;:::i;:::-;;:::i;1204:303::-;;;;;;:::i;:::-;;:::i;3408:125:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:3;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:3;1201:85;;;-1:-1:-1;;;;;4005:32:11;;;3987:51;;3975:2;3960:18;1201:85:3;3841:203:11;2367:102:5;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;2897:1653:1:-;;;;;;:::i;:::-;;:::i;3976:149:5:-;;;;;;:::i;:::-;;:::i;888:52:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;888:52:1;;;2081:198:3;;;;;;:::i;:::-;;:::i;2156:98:5:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:9;4570:32:5;719:10:9;4586:7:5;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;1513:1378:1:-;1614:10;1638:11;1634:67;;1672:18;;-1:-1:-1;;;1672:18:1;;;;;;;;;;;1634:67;1715:10;1711:81;;1762:19;;-1:-1:-1;;;1762:19:1;;;;;;;;;;;1711:81;1802:29;1834:6;1802:38;;1850:31;1884:18;1903:20;1884:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1884:40:1;;-1:-1:-1;1937:39:1;1934:101;;1999:25;;-1:-1:-1;;;1999:25:1;;;;;;;;;;;1934:101;2044:16;:61;;-1:-1:-1;;;;;;2044:61:1;-1:-1:-1;;;;;2044:61:1;;;;;;;;;2149:36;;-1:-1:-1;;;2149:36:1;;4005:32:11;;;2149:36:1;;;3987:51:11;-1:-1:-1;;2149:26:1;;3960:18:11;;2149:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2115:70;;2285:30;2318:16;;;;;;;;;-1:-1:-1;;;;;2318:16:1;-1:-1:-1;;;;;2318:25:1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2285:60;-1:-1:-1;2375:30:1;2285:60;2375:2;:30;:::i;:::-;2365:41;;:6;:41;:::i;:::-;2356:50;-1:-1:-1;2416:22:1;2454:4;2441:10;2356:50;2450:1;2441:10;:::i;:::-;:17;;;;:::i;:::-;2416:42;-1:-1:-1;2477:23:1;2416:42;2477:6;:23;:::i;:::-;2468:32;;2540:6;2514:23;:32;2511:97;;;2569:28;;-1:-1:-1;;;2569:28:1;;;;;;;;;;;2511:97;2618:16;;:62;;-1:-1:-1;;;2618:62:1;;-1:-1:-1;;;;;8075:15:11;;;2618:62:1;;;8057:34:11;2666:4:1;8107:18:11;;;8100:43;8159:18;;;8152:34;;;2618:16:1;;;;:29;;7992:18:11;;2618:62:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2783:20:1;2806:26;:21;2830:2;2806:26;:::i;:::-;:39;;2836:8;2806:39;:::i;:::-;2783:62;;2855:29;2861:8;2871:12;2855:5;:29::i;:::-;1585:1306;;;;;;;1513:1378;;:::o;5192:286:5:-;5319:4;719:10:9;5375:38:5;5391:4;719:10:9;5406:6:5;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:5;;5192:286;-1:-1:-1;;;;5192:286:5:o;5873:234::-;5961:4;719:10:9;6015:64:5;719:10:9;6031:7:5;6068:10;6040:25;719:10:9;6031:7:5;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;996:93:1:-;1094:13:3;:11;:13::i;:::-;1065:17:1::1;1071:2;1075:6;1065:5;:17::i;:::-;996:93:::0;;:::o;1204:303::-;1094:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;1333:40:1;::::1;1368:4;1333:40;1329:96;;;1396:18;;-1:-1:-1::0;;;1396:18:1::1;;;;;;;;;;;1329:96;1477:23;1434:18;1453:20;1434:40;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:66;;-1:-1:-1;;;;;1434:66:1;;;::::1;-1:-1:-1::0;;;;;;1434:66:1;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;1204:303:1:o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2367:102:5:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:9;6687:4:5;6768:25;719:10:9;6785:7:5;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:5;;8681:2:11;6803:85:5;;;8663:21:11;8720:2;8700:18;;;8693:30;8759:34;8739:18;;;8732:62;-1:-1:-1;;;8810:18:11;;;8803:35;8855:19;;6803:85:5;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:9;3862:28:5;719:10:9;3879:2:5;3883:6;3862:9;:28::i;2897:1653:1:-;3001:10;3025:11;3021:67;;3059:18;;-1:-1:-1;;;3059:18:1;;;;;;;;;;;3021:67;3102:10;3098:83;;3149:21;;-1:-1:-1;;;3149:21:1;;;;;;;;;;;3098:83;3191:31;3225:18;3244:20;3225:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3225:40:1;;-1:-1:-1;3278:39:1;3275:101;;3340:25;;-1:-1:-1;;;3340:25:1;;;;;;;;;;;3275:101;3385:16;:61;;-1:-1:-1;;;;;;3385:61:1;-1:-1:-1;;;;;3385:61:1;;;;;;;;3563:41;;-1:-1:-1;;;3563:41:1;;3598:4;3563:41;;;3987:51:11;-1:-1:-1;;3385:61:1;3563:26;;3960:18:11;;3563:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3521:83;;3614:30;3663:16;;;;;;;;;-1:-1:-1;;;;;3663:16:1;-1:-1:-1;;;;;3663:25:1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3657:33;;:2;:33;:::i;:::-;3647:44;;:6;:44;:::i;:::-;3614:77;;3738:31;3713:22;:56;3710:115;;;3792:22;;-1:-1:-1;;;3792:22:1;;;;;;;;;;;3710:115;3932:11;:6;3941:2;3932:11;:::i;:::-;:24;;3947:8;3932:24;:::i;:::-;3923:33;-1:-1:-1;3966:22:1;4004:4;3991:10;3923:33;4000:1;3991:10;:::i;:::-;:17;;;;:::i;:::-;3966:42;-1:-1:-1;4018:24:1;3966:42;4018:24;;:::i;:::-;4239;;-1:-1:-1;;;4239:24:1;;-1:-1:-1;;;;;4005:32:11;;4239:24:1;;;3987:51:11;4018:24:1;;-1:-1:-1;4018:24:1;;4239:4;;:14;;3960:18:11;;4239:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;4236:99;;;4295:29;;-1:-1:-1;;;4295:29:1;;;;;;;;;;;4236:99;4344:50;;-1:-1:-1;;;4344:50:1;;-1:-1:-1;;;;;8075:15:11;;4344:50:1;;;8057:34:11;4344:4:1;8107:18:11;;;8100:43;;;8159:18;;;8152:34;;;4344:4:1;:17;;7992:18:11;;4344:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4465:16:1;;:78;;-1:-1:-1;;;4465:78:1;;4503:4;4465:78;;;8057:34:11;-1:-1:-1;;;;;8127:15:11;;;8107:18;;;8100:43;8159:18;;;8152:34;;;4465:16:1;;;;:29;;7992:18:11;;4465:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2972:1578;;;;;2897:1653;;:::o;3976:149:5:-;-1:-1:-1;;;;;4091:18:5;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:3:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:3;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:3;;9087:2:11;2161:73:3::1;::::0;::::1;9069:21:11::0;9126:2;9106:18;;;9099:30;9165:34;9145:18;;;9138:62;-1:-1:-1;;;9216:18:11;;;9209:36;9262:19;;2161:73:3::1;8885:402:11::0;2161:73:3::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10110:370:5:-;-1:-1:-1;;;;;10241:19:5;;10233:68;;;;-1:-1:-1;;;10233:68:5;;9494:2:11;10233:68:5;;;9476:21:11;9533:2;9513:18;;;9506:30;9572:34;9552:18;;;9545:62;-1:-1:-1;;;9623:18:11;;;9616:34;9667:19;;10233:68:5;9292:400:11;10233:68:5;-1:-1:-1;;;;;10319:21:5;;10311:68;;;;-1:-1:-1;;;10311:68:5;;9899:2:11;10311:68:5;;;9881:21:11;9938:2;9918:18;;;9911:30;9977:34;9957:18;;;9950:62;-1:-1:-1;;;10028:18:11;;;10021:32;10070:19;;10311:68:5;9697:398:11;10311:68:5;-1:-1:-1;;;;;10390:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;2691:25:11;;;10441:32:5;;2664:18:11;10441:32:5;;;;;;;10110:370;;;:::o;8402:389::-;-1:-1:-1;;;;;8485:21:5;;8477:65;;;;-1:-1:-1;;;8477:65:5;;10302:2:11;8477:65:5;;;10284:21:11;10341:2;10321:18;;;10314:30;10380:33;10360:18;;;10353:61;10431:18;;8477:65:5;10100:355:11;8477:65:5;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:5;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:5;;2691:25:11;;;-1:-1:-1;;;;;8688:37:5;;;8705:1;;8688:37;;2679:2:11;2664:18;8688:37:5;;;;;;;996:93:1;;:::o;10761:441:5:-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:5;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:5;;10662:2:11;11010:68:5;;;10644:21:11;10701:2;10681:18;;;10674:30;10740:31;10720:18;;;10713:59;10789:18;;11010:68:5;10460:353:11;11010:68:5;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:5;;7593:68;;;;-1:-1:-1;;;7593:68:5;;11020:2:11;7593:68:5;;;11002:21:11;11059:2;11039:18;;;11032:30;11098:34;11078:18;;;11071:62;-1:-1:-1;;;11149:18:11;;;11142:35;11194:19;;7593:68:5;10818:401:11;7593:68:5;-1:-1:-1;;;;;7679:16:5;;7671:64;;;;-1:-1:-1;;;7671:64:5;;11426:2:11;7671:64:5;;;11408:21:11;11465:2;11445:18;;;11438:30;11504:34;11484:18;;;11477:62;-1:-1:-1;;;11555:18:11;;;11548:33;11598:19;;7671:64:5;11224:399:11;7671:64:5;-1:-1:-1;;;;;7817:15:5;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:5;;11830:2:11;7842:72:5;;;11812:21:11;11869:2;11849:18;;;11842:30;11908:34;11888:18;;;11881:62;-1:-1:-1;;;11959:18:11;;;11952:36;12005:19;;7842:72:5;11628:402:11;7842:72:5;-1:-1:-1;;;;;7948:15:5;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:5;8054:4;-1:-1:-1;;;;;8045:26:5;;8064:6;8045:26;;;;2691:25:11;;2679:2;2664:18;;2545:177;8045:26:5;;;;;;;;8082:37;11786:121;1359:130:3;1273:6;;-1:-1:-1;;;;;1273:6:3;719:10:9;1422:23:3;1414:68;;;;-1:-1:-1;;;1414:68:3;;12237:2:11;1414:68:3;;;12219:21:11;;;12256:18;;;12249:30;12315:34;12295:18;;;12288:62;12367:18;;1414:68:3;12035:356:11;2433:187:3;2525:6;;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:258:11:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:11;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:11;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:11:o;665:173::-;733:20;;-1:-1:-1;;;;;782:31:11;;772:42;;762:70;;828:1;825;818:12;762:70;665:173;;;:::o;843:254::-;911:6;919;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1011:29;1030:9;1011:29;:::i;:::-;1001:39;1087:2;1072:18;;;;1059:32;;-1:-1:-1;;;843:254:11:o;1294:127::-;1355:10;1350:3;1346:20;1343:1;1336:31;1386:4;1383:1;1376:15;1410:4;1407:1;1400:15;1426:719;1469:5;1522:3;1515:4;1507:6;1503:17;1499:27;1489:55;;1540:1;1537;1530:12;1489:55;1576:6;1563:20;1602:18;1639:2;1635;1632:10;1629:36;;;1645:18;;:::i;:::-;1720:2;1714:9;1688:2;1774:13;;-1:-1:-1;;1770:22:11;;;1794:2;1766:31;1762:40;1750:53;;;1818:18;;;1838:22;;;1815:46;1812:72;;;1864:18;;:::i;:::-;1904:10;1900:2;1893:22;1939:2;1931:6;1924:18;1985:3;1978:4;1973:2;1965:6;1961:15;1957:26;1954:35;1951:55;;;2002:1;1999;1992:12;1951:55;2066:2;2059:4;2051:6;2047:17;2040:4;2032:6;2028:17;2015:54;2113:1;2106:4;2101:2;2093:6;2089:15;2085:26;2078:37;2133:6;2124:15;;;;;;1426:719;;;;:::o;2150:390::-;2228:6;2236;2289:2;2277:9;2268:7;2264:23;2260:32;2257:52;;;2305:1;2302;2295:12;2257:52;2345:9;2332:23;2378:18;2370:6;2367:30;2364:50;;;2410:1;2407;2400:12;2364:50;2433;2475:7;2466:6;2455:9;2451:22;2433:50;:::i;:::-;2423:60;2530:2;2515:18;;;;2502:32;;-1:-1:-1;;;;2150:390:11:o;2727:328::-;2804:6;2812;2820;2873:2;2861:9;2852:7;2848:23;2844:32;2841:52;;;2889:1;2886;2879:12;2841:52;2912:29;2931:9;2912:29;:::i;:::-;2902:39;;2960:38;2994:2;2983:9;2979:18;2960:38;:::i;:::-;2950:48;;3045:2;3034:9;3030:18;3017:32;3007:42;;2727:328;;;;;:::o;3249:396::-;3327:6;3335;3388:2;3376:9;3367:7;3363:23;3359:32;3356:52;;;3404:1;3401;3394:12;3356:52;3444:9;3431:23;3477:18;3469:6;3466:30;3463:50;;;3509:1;3506;3499:12;3463:50;3532;3574:7;3565:6;3554:9;3550:22;3532:50;:::i;:::-;3522:60;;;3601:38;3635:2;3624:9;3620:18;3601:38;:::i;:::-;3591:48;;3249:396;;;;;:::o;3650:186::-;3709:6;3762:2;3750:9;3741:7;3737:23;3733:32;3730:52;;;3778:1;3775;3768:12;3730:52;3801:29;3820:9;3801:29;:::i;:::-;3791:39;3650:186;-1:-1:-1;;;3650:186:11:o;4049:260::-;4117:6;4125;4178:2;4166:9;4157:7;4153:23;4149:32;4146:52;;;4194:1;4191;4184:12;4146:52;4217:29;4236:9;4217:29;:::i;:::-;4207:39;;4265:38;4299:2;4288:9;4284:18;4265:38;:::i;4314:322::-;4383:6;4436:2;4424:9;4415:7;4411:23;4407:32;4404:52;;;4452:1;4449;4442:12;4404:52;4492:9;4479:23;4525:18;4517:6;4514:30;4511:50;;;4557:1;4554;4547:12;4511:50;4580;4622:7;4613:6;4602:9;4598:22;4580:50;:::i;:::-;4570:60;4314:322;-1:-1:-1;;;;4314:322:11:o;4641:380::-;4720:1;4716:12;;;;4763;;;4784:61;;4838:4;4830:6;4826:17;4816:27;;4784:61;4891:2;4883:6;4880:14;4860:18;4857:38;4854:161;;;4937:10;4932:3;4928:20;4925:1;4918:31;4972:4;4969:1;4962:15;5000:4;4997:1;4990:15;4854:161;;4641:380;;;:::o;5026:276::-;5157:3;5195:6;5189:13;5211:53;5257:6;5252:3;5245:4;5237:6;5233:17;5211:53;:::i;:::-;5280:16;;;;;5026:276;-1:-1:-1;;5026:276:11:o;5307:184::-;5377:6;5430:2;5418:9;5409:7;5405:23;5401:32;5398:52;;;5446:1;5443;5436:12;5398:52;-1:-1:-1;5469:16:11;;5307:184;-1:-1:-1;5307:184:11:o;5496:273::-;5564:6;5617:2;5605:9;5596:7;5592:23;5588:32;5585:52;;;5633:1;5630;5623:12;5585:52;5665:9;5659:16;5715:4;5708:5;5704:16;5697:5;5694:27;5684:55;;5735:1;5732;5725:12;5774:127;5835:10;5830:3;5826:20;5823:1;5816:31;5866:4;5863:1;5856:15;5890:4;5887:1;5880:15;5906:422;5995:1;6038:5;5995:1;6052:270;6073:7;6063:8;6060:21;6052:270;;;6132:4;6128:1;6124:6;6120:17;6114:4;6111:27;6108:53;;;6141:18;;:::i;:::-;6191:7;6181:8;6177:22;6174:55;;;6211:16;;;;6174:55;6290:22;;;;6250:15;;;;6052:270;;;6056:3;5906:422;;;;;:::o;6333:806::-;6382:5;6412:8;6402:80;;-1:-1:-1;6453:1:11;6467:5;;6402:80;6501:4;6491:76;;-1:-1:-1;6538:1:11;6552:5;;6491:76;6583:4;6601:1;6596:59;;;;6669:1;6664:130;;;;6576:218;;6596:59;6626:1;6617:10;;6640:5;;;6664:130;6701:3;6691:8;6688:17;6685:43;;;6708:18;;:::i;:::-;-1:-1:-1;;6764:1:11;6750:16;;6779:5;;6576:218;;6878:2;6868:8;6865:16;6859:3;6853:4;6850:13;6846:36;6840:2;6830:8;6827:16;6822:2;6816:4;6813:12;6809:35;6806:77;6803:159;;;-1:-1:-1;6915:19:11;;;6947:5;;6803:159;6994:34;7019:8;7013:4;6994:34;:::i;:::-;7064:6;7060:1;7056:6;7052:19;7043:7;7040:32;7037:58;;;7075:18;;:::i;:::-;7113:20;;6333:806;-1:-1:-1;;;6333:806:11:o;7144:140::-;7202:5;7231:47;7272:4;7262:8;7258:19;7252:4;7231:47;:::i;7289:168::-;7329:7;7395:1;7391;7387:6;7383:14;7380:1;7377:21;7372:1;7365:9;7358:17;7354:45;7351:71;;;7402:18;;:::i;:::-;-1:-1:-1;7442:9:11;;7289:168::o;7462:217::-;7502:1;7528;7518:132;;7572:10;7567:3;7563:20;7560:1;7553:31;7607:4;7604:1;7597:15;7635:4;7632:1;7625:15;7518:132;-1:-1:-1;7664:9:11;;7462:217::o;7684:128::-;7724:3;7755:1;7751:6;7748:1;7745:13;7742:39;;;7761:18;;:::i;:::-;-1:-1:-1;7797:9:11;;7684:128::o;8197:277::-;8264:6;8317:2;8305:9;8296:7;8292:23;8288:32;8285:52;;;8333:1;8330;8323:12;8285:52;8365:9;8359:16;8418:5;8411:13;8404:21;8397:5;8394:32;8384:60;;8440:1;8437;8430:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11.0;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ninterface IExchangeCurrency {\n    function balanceOf(address account) external view returns (uint256);\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function decimals() external view returns (uint8);\n}\n\nerror LowExchangeCurrencyBalance();\nerror InvalidExchangeCurrency();\nerror MintToZeroAddress();\nerror RedeemToZeroAddress();\nerror MintZeroQuantity();\nerror AddingOwnAddress();\nerror LowBalanceInContract();\nerror InsufficientBalanceToRedeem();\n\ncontract INRCToken is ERC20, Ownable, ReentrancyGuard {\n    IExchangeCurrency private ExchangeCurrency;\n    mapping(string => address) public exchangeCurrencies;\n\n    constructor() ERC20(\"INRCToken\", \"INRC\") {}\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    /** \n     * Adds a new exchange currency(e.g. DUSDC, 0x12D3424BdC7a9FC2f6F9D794810641662967a412)\n     */\n    function addExchangeCurrency(string memory exchangeCurrencyName, address exchangeCurrencyAddress) public onlyOwner {\n        if (exchangeCurrencyAddress == address(this)) {\n            revert AddingOwnAddress();\n        }\n        exchangeCurrencies[exchangeCurrencyName] = exchangeCurrencyAddress;\n    }\n\n    function buy(string memory exchangeCurrencyName, uint256 amount) public {\n        address receiver = msg.sender;\n        if (amount == 0) {\n            revert MintZeroQuantity();\n        }\n\n        if (msg.sender == address(0)) {\n            revert MintToZeroAddress();\n        }\n\n        uint256 amountWithoutDecimals = amount;\n        address exchangeCurrencyAddress = exchangeCurrencies[exchangeCurrencyName];\n        if(exchangeCurrencyAddress == address(0x0)) {\n            revert InvalidExchangeCurrency();\n        }\n        ExchangeCurrency = IExchangeCurrency(exchangeCurrencyAddress);\n        uint256 exchangeCurrencyBalance = ExchangeCurrency.balanceOf(receiver);\n\n        // This is added so that there is no mistake from caller end in putting decimals\n        uint8 exchangeCurrencyDecimals = ExchangeCurrency.decimals();\n\n        amount = amount * (10 ** exchangeCurrencyDecimals);\n        uint256 transactionFee = amount * 5 / 1000;\n        amount = amount + transactionFee;\n\n        if(exchangeCurrencyBalance < amount) {\n            revert LowExchangeCurrencyBalance();\n        }\n\n        ExchangeCurrency.transferFrom(receiver, address(this), amount);\n\n        // The conversion rate of 1:80 can be kept in mappings if more currencies are added\n        uint256 tokensToMint = amountWithoutDecimals * 80 * (10 ** 18);\n        _mint(receiver, tokensToMint);\n    }\n\n    function redeem(string memory exchangeCurrencyName, uint256 amount) public {\n        address receiver = msg.sender;\n        if (amount == 0) {\n            revert MintZeroQuantity();\n        }\n\n        if (msg.sender == address(0)) {\n            revert RedeemToZeroAddress();\n        }\n\n        address exchangeCurrencyAddress = exchangeCurrencies[exchangeCurrencyName];\n        if(exchangeCurrencyAddress == address(0x0)) {\n            revert InvalidExchangeCurrency();\n        }\n        ExchangeCurrency = IExchangeCurrency(exchangeCurrencyAddress);\n\n        // Checking exchange currency(USDC) balance of contract\n        uint256 contractExchangeCurrencyBalance = ExchangeCurrency.balanceOf(address(this));\n        uint256 exchangeCurrencyAmount = amount * (10 ** ExchangeCurrency.decimals());\n        \n        if(exchangeCurrencyAmount > contractExchangeCurrencyBalance) {\n            revert LowBalanceInContract();\n        }\n\n        // Calculating amount to charge in INRC with transaction fee + conversion ratio\n        amount = amount * 80 * (10 ** 18);\n        uint256 transactionFee = amount * 5 / 1000;\n        amount += transactionFee;\n\n        // Checking INRC balance of user and transferring it back to contract if available\n        // Transfer from receiver to contract will require the user to approve the contract\n        if(this.balanceOf(receiver) < amount) {\n            revert InsufficientBalanceToRedeem();\n        }\n        this.transferFrom(receiver, address(this), amount);\n\n        // Transfering exchange currency(USDC) back to user\n        ExchangeCurrency.transferFrom(address(this), receiver, exchangeCurrencyAmount);\n    }\n}",
  "sourcePath": "/Users/xception/projects/ASSIGNMENTS/inrc-project/truffle/contracts/INRCToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/INRCToken.sol",
    "exportedSymbols": {
      "AddingOwnAddress": [
        131
      ],
      "Context": [
        1689
      ],
      "ERC20": [
        1269
      ],
      "IERC20": [
        1347
      ],
      "IERC20Metadata": [
        1372
      ],
      "IExchangeCurrency": [
        119
      ],
      "INRCToken": [
        472
      ],
      "InsufficientBalanceToRedeem": [
        135
      ],
      "InvalidExchangeCurrency": [
        123
      ],
      "LowBalanceInContract": [
        133
      ],
      "LowExchangeCurrencyBalance": [
        121
      ],
      "MintToZeroAddress": [
        125
      ],
      "MintZeroQuantity": [
        129
      ],
      "Ownable": [
        643
      ],
      "RedeemToZeroAddress": [
        127
      ],
      "ReentrancyGuard": [
        683
      ]
    },
    "id": 473,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 92,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:26:1"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 93,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 473,
        "sourceUnit": 1270,
        "src": "60:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 94,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 473,
        "sourceUnit": 644,
        "src": "132:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 95,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 473,
        "sourceUnit": 684,
        "src": "201:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IExchangeCurrency",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 119,
        "linearizedBaseContracts": [
          119
        ],
        "name": "IExchangeCurrency",
        "nameLocation": "291:17:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "70a08231",
            "id": 102,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "324:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "342:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "334:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "333:17:1"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "374:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "373:9:1"
            },
            "scope": 119,
            "src": "315:68:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 113,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "397:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "418:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "410:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "432:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "424:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "444:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "436:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:42:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "470:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:6:1"
            },
            "scope": 119,
            "src": "388:88:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "313ce567",
            "id": 118,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "490:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:2:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "524:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:7:1"
            },
            "scope": 119,
            "src": "481:50:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 473,
        "src": "281:252:1",
        "usedErrors": []
      },
      {
        "id": 121,
        "name": "LowExchangeCurrencyBalance",
        "nameLocation": "541:26:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 120,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "567:2:1"
        },
        "src": "535:35:1"
      },
      {
        "id": 123,
        "name": "InvalidExchangeCurrency",
        "nameLocation": "577:23:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 122,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "600:2:1"
        },
        "src": "571:32:1"
      },
      {
        "id": 125,
        "name": "MintToZeroAddress",
        "nameLocation": "610:17:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 124,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "627:2:1"
        },
        "src": "604:26:1"
      },
      {
        "id": 127,
        "name": "RedeemToZeroAddress",
        "nameLocation": "637:19:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 126,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "656:2:1"
        },
        "src": "631:28:1"
      },
      {
        "id": 129,
        "name": "MintZeroQuantity",
        "nameLocation": "666:16:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 128,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "682:2:1"
        },
        "src": "660:25:1"
      },
      {
        "id": 131,
        "name": "AddingOwnAddress",
        "nameLocation": "692:16:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 130,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "708:2:1"
        },
        "src": "686:25:1"
      },
      {
        "id": 133,
        "name": "LowBalanceInContract",
        "nameLocation": "718:20:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 132,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "738:2:1"
        },
        "src": "712:29:1"
      },
      {
        "id": 135,
        "name": "InsufficientBalanceToRedeem",
        "nameLocation": "748:27:1",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 134,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "775:2:1"
        },
        "src": "742:36:1"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 136,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1269,
              "src": "802:5:1"
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "802:5:1"
          },
          {
            "baseName": {
              "id": 138,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 643,
              "src": "809:7:1"
            },
            "id": 139,
            "nodeType": "InheritanceSpecifier",
            "src": "809:7:1"
          },
          {
            "baseName": {
              "id": 140,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 683,
              "src": "818:15:1"
            },
            "id": 141,
            "nodeType": "InheritanceSpecifier",
            "src": "818:15:1"
          }
        ],
        "canonicalName": "INRCToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 472,
        "linearizedBaseContracts": [
          472,
          683,
          643,
          1269,
          1372,
          1347,
          1689
        ],
        "name": "INRCToken",
        "nameLocation": "789:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 144,
            "mutability": "mutable",
            "name": "ExchangeCurrency",
            "nameLocation": "866:16:1",
            "nodeType": "VariableDeclaration",
            "scope": 472,
            "src": "840:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
              "typeString": "contract IExchangeCurrency"
            },
            "typeName": {
              "id": 143,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 142,
                "name": "IExchangeCurrency",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 119,
                "src": "840:17:1"
              },
              "referencedDeclaration": 119,
              "src": "840:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                "typeString": "contract IExchangeCurrency"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "dfabd212",
            "id": 148,
            "mutability": "mutable",
            "name": "exchangeCurrencies",
            "nameLocation": "922:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 472,
            "src": "888:52:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 147,
              "keyType": {
                "id": 145,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "896:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "888:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 146,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "988:2:1",
              "statements": []
            },
            "id": 156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "494e5243546f6b656e",
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "967:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8983e62f15f75b8cd11e48f22f4498c3530992eb22647f986f6cff8e87bc0585",
                      "typeString": "literal_string \"INRCToken\""
                    },
                    "value": "INRCToken"
                  },
                  {
                    "hexValue": "494e5243",
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "980:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b3b8e3ca0d437d15f523f3251e15f4b74cfe57fd84de32b25abba84de37d520d",
                      "typeString": "literal_string \"INRC\""
                    },
                    "value": "INRC"
                  }
                ],
                "id": 153,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 150,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1269,
                  "src": "961:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "961:26:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:1"
            },
            "scope": 472,
            "src": "947:43:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1055:34:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "1071:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1075:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "1065:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:17:1"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 162,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "1045:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1045:9:1"
              }
            ],
            "name": "mint",
            "nameLocation": "1005:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1018:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1010:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1030:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1022:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:28:1"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:1"
            },
            "scope": 472,
            "src": "996:93:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1319:188:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 181,
                      "name": "exchangeCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "1333:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 184,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1368:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INRCToken_$472",
                            "typeString": "contract INRCToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_INRCToken_$472",
                            "typeString": "contract INRCToken"
                          }
                        ],
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1360:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1360:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1360:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1333:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 191,
                  "nodeType": "IfStatement",
                  "src": "1329:96:1",
                  "trueBody": {
                    "id": 190,
                    "nodeType": "Block",
                    "src": "1375:50:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 187,
                            "name": "AddingOwnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1396:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1396:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "RevertStatement",
                        "src": "1389:25:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "exchangeCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1434:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "id": 193,
                        "name": "exchangeCurrencyName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "1453:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1434:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 195,
                      "name": "exchangeCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "1477:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1434:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:66:1"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "1095:104:1",
              "text": " Adds a new exchange currency(e.g. DUSDC, 0x12D3424BdC7a9FC2f6F9D794810641662967a412)"
            },
            "functionSelector": "4a0f5082",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 179,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 178,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "1309:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1309:9:1"
              }
            ],
            "name": "addExchangeCurrency",
            "nameLocation": "1213:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "exchangeCurrencyName",
                  "nameLocation": "1247:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1233:34:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "exchangeCurrencyAddress",
                  "nameLocation": "1277:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1269:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:69:1"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:0:1"
            },
            "scope": 472,
            "src": "1204:303:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "1585:1306:1",
              "statements": [
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "1603:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "1595:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1595:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "initialValue": {
                    "expression": {
                      "id": 208,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1614:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1614:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1595:29:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 211,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "1638:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1648:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1638:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 218,
                  "nodeType": "IfStatement",
                  "src": "1634:67:1",
                  "trueBody": {
                    "id": 217,
                    "nodeType": "Block",
                    "src": "1651:50:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 214,
                            "name": "MintZeroQuantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1672:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1672:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 216,
                        "nodeType": "RevertStatement",
                        "src": "1665:25:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1715:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1715:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1729:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1729:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1729:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1715:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "nodeType": "IfStatement",
                  "src": "1711:81:1",
                  "trueBody": {
                    "id": 229,
                    "nodeType": "Block",
                    "src": "1741:51:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 226,
                            "name": "MintToZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1762:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1762:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 228,
                        "nodeType": "RevertStatement",
                        "src": "1755:26:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 232,
                      "mutability": "mutable",
                      "name": "amountWithoutDecimals",
                      "nameLocation": "1810:21:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "1802:29:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1802:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "id": 233,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "1834:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1802:38:1"
                },
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "exchangeCurrencyAddress",
                      "nameLocation": "1858:23:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "1850:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1850:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 240,
                  "initialValue": {
                    "baseExpression": {
                      "id": 237,
                      "name": "exchangeCurrencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1884:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 239,
                    "indexExpression": {
                      "id": 238,
                      "name": "exchangeCurrencyName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "1903:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1884:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1850:74:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 241,
                      "name": "exchangeCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "1937:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1972:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1964:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1964:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1964:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1937:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "IfStatement",
                  "src": "1934:101:1",
                  "trueBody": {
                    "id": 250,
                    "nodeType": "Block",
                    "src": "1978:57:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 247,
                            "name": "InvalidExchangeCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "1999:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1999:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 249,
                        "nodeType": "RevertStatement",
                        "src": "1992:32:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 252,
                      "name": "ExchangeCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "2044:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                        "typeString": "contract IExchangeCurrency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 254,
                          "name": "exchangeCurrencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "2081:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 253,
                        "name": "IExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2063:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchangeCurrency_$119_$",
                          "typeString": "type(contract IExchangeCurrency)"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2063:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                        "typeString": "contract IExchangeCurrency"
                      }
                    },
                    "src": "2044:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                      "typeString": "contract IExchangeCurrency"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:61:1"
                },
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "exchangeCurrencyBalance",
                      "nameLocation": "2123:23:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "2115:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 258,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2115:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2176:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 260,
                        "name": "ExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2149:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                          "typeString": "contract IExchangeCurrency"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "2149:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2115:70:1"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "exchangeCurrencyDecimals",
                      "nameLocation": "2291:24:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "2285:30:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2285:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 267,
                        "name": "ExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2318:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                          "typeString": "contract IExchangeCurrency"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118,
                      "src": "2318:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2318:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2285:60:1"
                },
                {
                  "expression": {
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 271,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2356:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 272,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2365:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2375:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 274,
                              "name": "exchangeCurrencyDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "2381:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "2375:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 276,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2374:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2365:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2356:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2356:50:1"
                },
                {
                  "assignments": [
                    281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "transactionFee",
                      "nameLocation": "2424:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "2416:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2416:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 287,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 282,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2441:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "2441:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2454:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "2441:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2416:42:1"
                },
                {
                  "expression": {
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2468:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 289,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2477:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 290,
                        "name": "transactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "2486:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2477:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2468:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:32:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 294,
                      "name": "exchangeCurrencyBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "2514:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 295,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2540:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2514:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "nodeType": "IfStatement",
                  "src": "2511:97:1",
                  "trueBody": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "2548:60:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 297,
                            "name": "LowExchangeCurrencyBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "2569:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2569:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "RevertStatement",
                        "src": "2562:35:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2648:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 308,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2666:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          ],
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2658:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 306,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2658:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2658:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 310,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2673:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 302,
                        "name": "ExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2618:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                          "typeString": "contract IExchangeCurrency"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "2618:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:62:1"
                },
                {
                  "assignments": [
                    314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "tokensToMint",
                      "nameLocation": "2791:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "2783:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2783:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 323,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 315,
                        "name": "amountWithoutDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2806:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3830",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2830:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80_by_1",
                          "typeString": "int_const 80"
                        },
                        "value": "80"
                      },
                      "src": "2806:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2836:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2842:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2836:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        }
                      ],
                      "id": 321,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2835:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "2806:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2783:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2861:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 326,
                        "name": "tokensToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "2871:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 324,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "2855:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:29:1"
                }
              ]
            },
            "functionSelector": "0ca5c504",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "1522:3:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "exchangeCurrencyName",
                  "nameLocation": "1540:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "1526:34:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1570:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "1562:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1562:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:52:1"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:0:1"
            },
            "scope": 472,
            "src": "1513:1378:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "2972:1578:1",
              "statements": [
                {
                  "assignments": [
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2990:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "2982:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2982:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "expression": {
                      "id": 339,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3001:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3001:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2982:29:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 342,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "3025:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3035:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3025:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 349,
                  "nodeType": "IfStatement",
                  "src": "3021:67:1",
                  "trueBody": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "3038:50:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 345,
                            "name": "MintZeroQuantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3059:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3059:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 347,
                        "nodeType": "RevertStatement",
                        "src": "3052:25:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 350,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3102:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3102:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3124:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3116:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3116:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3116:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3102:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 361,
                  "nodeType": "IfStatement",
                  "src": "3098:83:1",
                  "trueBody": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "3128:53:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 357,
                            "name": "RedeemToZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "3149:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3149:21:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 359,
                        "nodeType": "RevertStatement",
                        "src": "3142:28:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "exchangeCurrencyAddress",
                      "nameLocation": "3199:23:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "3191:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3191:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 367,
                  "initialValue": {
                    "baseExpression": {
                      "id": 364,
                      "name": "exchangeCurrencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3225:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 366,
                    "indexExpression": {
                      "id": 365,
                      "name": "exchangeCurrencyName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "3244:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3225:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3191:74:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 368,
                      "name": "exchangeCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "3278:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3305:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3305:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3305:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3278:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 378,
                  "nodeType": "IfStatement",
                  "src": "3275:101:1",
                  "trueBody": {
                    "id": 377,
                    "nodeType": "Block",
                    "src": "3319:57:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 374,
                            "name": "InvalidExchangeCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "3340:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3340:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 376,
                        "nodeType": "RevertStatement",
                        "src": "3333:32:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 379,
                      "name": "ExchangeCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "3385:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                        "typeString": "contract IExchangeCurrency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 381,
                          "name": "exchangeCurrencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "3422:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 380,
                        "name": "IExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "3404:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchangeCurrency_$119_$",
                          "typeString": "type(contract IExchangeCurrency)"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3404:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                        "typeString": "contract IExchangeCurrency"
                      }
                    },
                    "src": "3385:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                      "typeString": "contract IExchangeCurrency"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:61:1"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "contractExchangeCurrencyBalance",
                      "nameLocation": "3529:31:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "3521:39:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3521:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 391,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3598:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          ],
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3590:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 389,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3590:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3590:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 387,
                        "name": "ExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3563:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                          "typeString": "contract IExchangeCurrency"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "3563:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3521:83:1"
                },
                {
                  "assignments": [
                    396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 396,
                      "mutability": "mutable",
                      "name": "exchangeCurrencyAmount",
                      "nameLocation": "3622:22:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "3614:30:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 395,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3614:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 397,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "3647:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3657:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 399,
                                "name": "ExchangeCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144,
                                "src": "3663:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                                  "typeString": "contract IExchangeCurrency"
                                }
                              },
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 118,
                              "src": "3663:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3663:27:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3657:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 403,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3656:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3647:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3614:77:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 406,
                      "name": "exchangeCurrencyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "3713:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 407,
                      "name": "contractExchangeCurrencyBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "3738:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3713:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 413,
                  "nodeType": "IfStatement",
                  "src": "3710:115:1",
                  "trueBody": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "3771:54:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 409,
                            "name": "LowBalanceInContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3792:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3792:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 411,
                        "nodeType": "RevertStatement",
                        "src": "3785:29:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 414,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "3923:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 415,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "3932:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3830",
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3941:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80_by_1",
                            "typeString": "int_const 80"
                          },
                          "value": "80"
                        },
                        "src": "3932:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3947:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3953:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3947:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 421,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3946:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "3932:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3923:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:33:1"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "transactionFee",
                      "nameLocation": "3974:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "3966:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3966:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 432,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 427,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "3991:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4000:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "3991:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4004:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3991:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3966:42:1"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 433,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "4018:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "transactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "4028:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4018:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:24:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 439,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "4254:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 437,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "4239:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INRCToken_$472",
                            "typeString": "contract INRCToken"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "4239:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4239:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 441,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "4266:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4239:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 447,
                  "nodeType": "IfStatement",
                  "src": "4236:99:1",
                  "trueBody": {
                    "id": 446,
                    "nodeType": "Block",
                    "src": "4274:61:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 443,
                            "name": "InsufficientBalanceToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4295:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4295:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 445,
                        "nodeType": "RevertStatement",
                        "src": "4288:36:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "4362:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 454,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4380:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          ],
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4372:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 452,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4372:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4372:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 456,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "4387:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 448,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "4344:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INRCToken_$472",
                          "typeString": "contract INRCToken"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "4344:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4344:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 464,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4503:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INRCToken_$472",
                              "typeString": "contract INRCToken"
                            }
                          ],
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4495:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4495:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4495:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 466,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "4510:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "exchangeCurrencyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "4520:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 459,
                        "name": "ExchangeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4465:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchangeCurrency_$119",
                          "typeString": "contract IExchangeCurrency"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "4465:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4465:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "4465:78:1"
                }
              ]
            },
            "functionSelector": "b1b86b13",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2906:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "exchangeCurrencyName",
                  "nameLocation": "2927:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "2913:34:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2957:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "2949:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2912:52:1"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2972:0:1"
            },
            "scope": 472,
            "src": "2897:1653:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 473,
        "src": "780:3772:1",
        "usedErrors": [
          121,
          123,
          125,
          127,
          129,
          131,
          133,
          135
        ]
      }
    ],
    "src": "32:4520:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-08-15T18:38:21.140Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addExchangeCurrency(string,address)": {
        "notice": "Adds a new exchange currency(e.g. DUSDC, 0x12D3424BdC7a9FC2f6F9D794810641662967a412)"
      }
    },
    "version": 1
  }
}